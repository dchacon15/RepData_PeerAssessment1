source(pathtofile("myLabels.R"), local = TRUE)
myedit("myLabels.R")
pathtofile("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat|color * cut, data=diamonds)
xyplot(price~carat|color * cut, data=diamonds,strip=FALSE,phc=20,xlab=myxlab,ylab=myylba,main=mymain)
xyplot(price~carat|color * cut, data=diamonds,strip=FALSE,phc=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors(),10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
pal(seq(0,1,len=6))
p1(6)
0xCC
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
p1(20)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue","green"),alpha=0.5)
p3(5)
rbg(0,0.5,0.5)
plot(x,y,pch=19,col=rgb(0,0.5,.5))
plot(x,y,pch=19,col=rgb(0,0.5,.5,.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano,col = pal(20))
image(volcano,col = p1(20))
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,col=drv)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("points","smooth"))
qplot(displ, hwy, data = mpg, color = drv, geom = c("point","smooth"))
qplot(hwy, data = mpg, color = drv)
qplot(y=hwy, data = mpg, color = drv)
myhigh
qplot(x=drv,y=hwy, data = mpg, geom = "boxplot")
qplot(x=drv,y=hwy, data = mpg, geom = "boxplot",color=manufacterer)
qplot(x=drv,y=hwy, data = mpg, geom = "boxplot",color= manufacturer)
qplot(hwy, data = mpg,color=drv)
qplot(hwy, data = mpg,fill=drv)
qplot(displ,hwy, data = mpg,facets = .~drv)
qplot(hwy, data = mpg,facets = drv~.)
qplot(hwy, data = mpg,facets = drv~.,binwidth=2)
qplot(displ,hwy,data=mpg,geom = c("point","smooth"),facets = .~drv)
g<-qplot(mpg,aes(displ,hwy))
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,color=aes(drv))
g+geom_point(size=4,alpha=1/2,aes(color,drv))
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(size=4,alpha=1/2,aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Dispacemente", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Dispacemente", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacemente", y="Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm")
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx,myy,type = "l",ylim=c(-3,3))
g<-ggplot(testdat,aes(myx,myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg,aes(displ,hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = "lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = "lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
qplot(price,data=diamonds,binwidth=range/30)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method = "lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method = "lm")+facet_grid(.~cut)
qplot(carat,price,data=diamonds,color=cut,facets = .~cut)+geom_smooth(method = "lm")
g
g<-ggplot(diamonds,aes(depth,price))
summary(g)
g<-geom_point(alpha=1/3)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm = TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
?svd
?scale
?t
colors
colors()
grey()
?colorRamp
pal<-colorRamp("snow")
pal(0)
pal(1)
pal(0.5)
pal<-colorRamp("snow","red")
pal<-colorRamp(c("snow","red")
)
pal(0.5)
pal(0)
pal(1)
swirl()
library(swirl)
swil()
swirl()
dist(dataFrame)
hclust(distxy)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4, col="red")
5
9
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple",pch=3,cex=2,lwd=2))
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
which.min(distTmp,2)
?which.min
which.min(distTmp)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points (newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
dist(mdist,x,y,newCx,newCy)
madist(x,y,newCx,newCy)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers = 3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=T)
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%t(matv)
matu%*%diag%*%t(matv)
svd(scale(mat))
scale(mat)
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2.v[,2]
svd2$v[,2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-(svd1$u[,1] %*% svd1$d[1]) %*% t(svd1$v[1])
a1<-(svd1$u[,1] %*% svd1$d[1]) %*% t(svd1$v[,1])
a1<-svd1$u[1] %*% svd1$d[1] %*% t(svd1$v[,1])
a1<-(svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2<-(svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2<-svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ss[,562:563])
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd,subject==1)
sub1
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:5)
showMe(1:6)
mdist<-dist(x[,1:3])
mdist<-dist(sub1[,1:3])
hclust(mdist)
hclustering<-hclust(mdist)
showMe(hclustering,lab.col=unclass(sub1$activity))
myplclust(hclustering,lab.col=unclass(sub1$activity))
dist(sub1[,10:12])
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(c(sub1[10:12],maxCon))
mdist<-dist(c(sub1[10:12],maxCon))
mdist<-dist(c(sub1[10:12]))
mdist<-dist(10:12])
mdist<-dist(sub1[10:12])
mdist<-dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
mdplclust(hclustering,lab.col=unclass(sub1$activity))
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClus<-kmeans(sub1[lenght(sub1)]-2,centes=6)
kClus<-kmeans(sub1[lenght(sub1)-2],centes=6)
kClus<-kmeans(sub1[sequence(lenght(sub1))-2],centes=6)
kClus<-kmeans(sub1[seq_along(lenght(sub1))-2],centes=6)
kClus<-kmeans(sub1[seq_along(lenght(sub1))-2])
kClus<-kmeans(sub1[seq_along(lenght(sub1))-2],centes=6)
kClus<-kmeans(sub1[seq_along(lenght(sub1))-2],centers=6)
kClus<-kmeans(sub1[seq_along(length(sub1))-2],centers=6)
kClus<-kmeans(sub1[,seq_along(length(sub1))-2],centers=6)
kClus<-kmeans(sub1[,seq_along(length(sub1)-2)],centers=6)
kClus<-kmeans(sub1[,-c(562,563)],centers=6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6,nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kClust)
dim(kClust$centers)
which(kClust$size==29)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=12,ylab = "Laying Cluster")
plot(kClust$centers[laying,1:12],pch=19,ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab = "Laying Cluster")
plot(kClust$centers[walkdown,1:12],pch=19,ylab = "Walkdown Cluster")
dim(pm0)
head(pm0)
cnams
cnames
cnames<-strsplit(cnames,"|",fixed = TRUE)
cnames
names(pm0)<-cnames[[1]][wcol]
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
wcol
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative<-x1<0
sum(negative,na.rm = TRUE)
mean(negative,na.rm = TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(dates,"%Y%m%d")
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
intersect(site0,site1)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0,(State.Code==36 & County.Site  %in% both))
cnt0<-subset(pm0,(State.Code==36 & county.site  %in% both))
cnt0<-subset(pm0,State.Code==36 & county.site  %in% both)
cnt1<-subset(pm1,State.Code==36 & county.site  %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub<-subset(cnt0,County.Code==63 & Site.ID == 2008)
pm1sub<-subset(cnt1,County.Code==63 & Site.ID == 2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<- as.Date(as.character(pm0sub$Date),"%Y%m%d"))
dates0<- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(h=median(x0sub,na.rm = TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm = TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rm = TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.r))
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
mn1
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0),mean<-mn0)
d0<-data.frame(state=names(mn0),mean=mn0)
d1<-data.frame(state=names(mn1),mean=mn1)
mrg<-merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3],xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3]))
with(mrg, points(rep(2, 52), mrg[, 3]))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
setwd("~/Documents/Data Science/Reproducible Research/RepData_PeerAssessment1")
activityData <- read.csv("activity.csv")
str(activityData)
activityData$date <- as.Date(activityData$date)
str(activityData)
c;ass(activityData$date)
class(activityData$date)
?as.Date
?format
activityData$date <- as.Date(activityData$date, "%y/%m/%d")
class(activityData$date)
str(activityData)
activityData$date <- as.Date(activityData$date, "%y-%m-%d")
str(activityData)
?aggregate
aggregate(steps~date, data = activityData, sum)
activityData <- read.csv("activity.csv",na.strings = "NA")
activityData$date <- as.Date(activityData$date, "%y-%m-%d")
?ggplot
library(ggplot2)
?ggplot
?hist
?text
View(activityData)
max(activityData$steps, na.rm = FALSE)
max(activityData$steps, na.rm = TRUE)
?complete.cases
?aggregate
averageNumberSteps <- aggregate(steps~interval, activityData, mean)
merge(activityData,averageNumberSteps,
by.x = activityData$interval,
by.y = averageNumberSteps$interval)
merge(activityData,averageNumberSteps,
by.x = interval,
by.y = interval)
merge(activityData,averageNumberSteps,
by.x = interval,
by.y = interval, all = TRUE)
merge(activityData,averageNumberSteps,
by.x = activityData$interval,
by.y = averageNumberSteps$interval, all = TRUE)
averageNumberSteps$date <- NA
str(averageNumberSteps)
merge(activityData,averageNumberSteps,
by.x = activityData$interval,
by.y = averageNumberSteps$interval)
merge(activityData,averageNumberSteps,
by.x = activityData$interval,
by.y = averageNumberSteps$interval, all.x = TRUE)
merge(activityData,averageNumberSteps,
by.x = activityData$interval,
by.y = averageNumberSteps$interval, all = TRUE)
merge(activityData,averageNumberSteps,
by.x = "interval", all = TRUE)
merge(activityData,averageNumberSteps,
by = "interval", all = TRUE)
averageNumberSteps <- aggregate(steps~interval, activityData, mean)
merge(activityData,averageNumberSteps,
by = "interval", all = TRUE)
str(merge(activityData,averageNumberSteps,
by = "interval", all = TRUE))
merge(activityData,averageNumberSteps,
by = "interval")
str(merge(activityData,averageNumberSteps,
by = "interval", all = TRUE))
str(merge(activityData,averageNumberSteps,
by = "interval"))
?if
asd
?ifelse
activityData <- merge(activityData,averageNumberSteps, by = "interval")
with(activityData,steps <- ifelse(is.na(steps.x),steps.y,steps.y))
activityData <- merge(activityData,averageNumberSteps, by = "interval")
activityData$steps <- ifelse(is.na(activityData$steps.x),activityData$steps.y,activityData$steps.y)
activityData <- read.csv("activity.csv",na.strings = "NA")
activityData$date <- as.Date(activityData$date)
averageNumberSteps <- aggregate(steps~interval, activityData, mean)
activityData <- merge(activityData,averageNumberSteps, by = "interval")
activityData$steps <- ifelse(is.na(activityData$steps.x),activityData$steps.y,activityData$steps.y)
activityData$steps <- ifelse(is.na(activityData$steps.x),activityData$steps.y,activityData$steps.x)
activityData <- subset(activityData, select = c(interval,steps,date))
totalStepsPerDayNoNA <- aggregate(steps~date, filledMissingNA, sum)
ggplot(totalStepsPerDayNoNA,aes(steps))+
geom_histogram(bins = 20, fill = "light red") +
ggtitle("Histogram of the total number of steps\ntaken each day")+
xlab("Number of steps taken each day")
totalStepsPerDayNoNA <- aggregate(steps~date, filledMissingNA, sum)
filledMissingNA <- merge(activityData,averageNumberSteps, by = "interval")
with(filledMissingNA,steps <- ifelse(is.na(steps.x),steps.y,steps.x))
filledMissingNA <- subset(filledMissingNA, select = c(interval,steps,date))
with(filledMissingNA,steps <- ifelse(is.na(steps.x),steps.y,steps.x))
filledMissingNA$steps <- ifelse(is.na(filledMissingNA$steps.x),
filledMissingNA$steps.y,
filledMissingNA$steps.x)
filledMissingNA <- subset(filledMissingNA, select = c(interval,steps,date))
totalStepsPerDayNoNA <- aggregate(steps~date, filledMissingNA, sum)
ggplot(totalStepsPerDayNoNA,aes(steps))+
geom_histogram(bins = 20, fill = "light red") +
ggtitle("Histogram of the total number of steps\ntaken each day")+
xlab("Number of steps taken each day")
ggplot(totalStepsPerDayNoNA,aes(steps))+
geom_histogram(bins = 20, fill = "ligth red") +
ggtitle("Histogram of the total number of steps\ntaken each day")+
xlab("Number of steps taken each day")
ggplot(totalStepsPerDayNoNA,aes(steps))+
geom_histogram(bins = 20, fill = "maroon1") +
ggtitle("Histogram of the total number of steps\ntaken each day")+
xlab("Number of steps taken each day")
totalStepsPerDayNoNA <- aggregate(steps~date, filledMissingNA, sum)
ggplot(totalStepsPerDayNoNA,aes(steps))+
geom_histogram(bins = 20, fill = "indianred1") +
ggtitle("Histogram of the total number of steps\ntaken each day")+
xlab("Number of steps taken each day")
weekdays(activityData$date)
filledMissingNA$DateType <- ifelse(weekdays(filledMissingNA$date)=="Sunday"||
weekdays(filledMissingNA$date)=="Saturday",
"Weekend","Weekday")
filledMissingNA$DateType <- is.factor(filledMissingNA$DateType )
filledMissingNA$DateType <- ifelse(weekdays(filledMissingNA$date)=="Sunday"||
weekdays(filledMissingNA$date)=="Saturday",
"Weekend","Weekday")
filledMissingNA$DateType <- as.factor(filledMissingNA$DateType )
filledMissingNA$DateType <- ifelse(weekdays(filledMissingNA$date)=="Sunday"|
weekdays(filledMissingNA$date)=="Saturday",
"Weekend","Weekday")
filledMissingNA$DateType <- as.factor(filledMissingNA$DateType )
ggplot(filledMissingNA,aes(interval,steps))+
geom_line(col="blue") +
labs(title = "Average Number of Steps Taken\nAcross All Days")+
xlab("5-min Interval")+
ylab("Avg. Steps Across All Days")+
facet_wrap(DateType)
ggplot(filledMissingNA,aes(interval,steps))+
geom_line(col="blue") +
labs(title = "Average Number of Steps Taken\nAcross All Days")+
xlab("5-min Interval")+
ylab("Avg. Steps Across All Days")+
facet_wrap(filledMissingNA$DateType)
ggplot(filledMissingNA,aes(interval,steps))+
geom_line(col="blue") +
labs(title = "Average Number of Steps Taken\nAcross All Days")+
xlab("5-min Interval")+
ylab("Avg. Steps Across All Days")+
facet_grid(.~DateType)
ggplot(filledMissingNA,aes(interval,steps))+
geom_line(col="blue") +
labs(title = "Average Number of Steps Taken\nAcross All Days")+
xlab("5-min Interval")+
ylab("Avg. Steps Across All Days")+
facet_wrap(.~DateType)
?qplot
averageNumberStepsNoNA <- aggregate(steps~interval+DateType, filledMissingNA, mean)
qplot(interval,steps,data=averageNumberStepsNoNA,facets = .~DateType,geom = "line")
qplot(interval,steps,data=averageNumberStepsNoNA,facets = .~DateType,geom = "line",col=DateType)
qplot(interval,steps,data=averageNumberStepsNoNA,facets = DateType~.,geom = "line",
col=DateType)
